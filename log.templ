package main

import "encoding/json"
import "fmt"
import "strconv"

func logLink(log *Log, op string) templ.SafeURL {
  return templ.URL(fmt.Sprintf("/log/%d/%s", log.Hash(), op))
}

func toJson(v interface {}) string {
  b, err := json.Marshal(v)
  if (err != nil) {
    return ""
  }
  return string(b)
}

templ LogList(autorefresh bool, logs []*Log) {
  @Base(TopLevelLog, "Log list") {
    @Row("refresh") {
      @Col(6) {
        if autorefresh {
          <a class="btn btn-primary" href="/log/">Turn off autorefresh</a>
          <div hx-get="/log/?autorefresh=1"
               hx-trigger="every 1s"
               hx-target="#logs"
               hx-select="#logs" />
        } else {
          <a class="btn btn-primary" href="/log/?autorefresh=1">Turn on autorefresh</a>
          <a class="btn btn-primary" href="/log/">Refresh</a>
        }
      }
    }
    @Row("logs") {
      @Col(12) {
        <table class="table">
          <thead>
            if !autorefresh {
            <th scope="col">Op</th>
            }
            <th scope="col">Stream</th>
            <th scope="col">Timestamp</th>
            <th scope="col">Fields</th>
            <th scope="col">Message</th>
          </thead>
          <tbody>
            for _, log := range logs {
              <tr>
                if !autorefresh {
                <td>
                  <div class="btn-group">
                    <a class="btn btn-primary btn-sm" href={logLink(log, "spam")}>-</a>
                    <a class="btn btn-primary btn-sm" href={logLink(log, "ham")}>!</a>
                  </div>
                </td>
                }
                <td>
                  // One way to do it (quite long)
                  // {log.StreamString()}

                  for _, k := range sortedKeys[string](log.Stream) {
                    <p>{k}={log.Stream[k]}</p>
                  }

                </td>
                <td>{strconv.Itoa(log.Timestamp)}</td>
                <td>
                  for _, k := range sortedKeys[string](log.Fields) {
                    <p>{k}={toJson(log.Fields[k])}</p>
                  }
                </td>
                <td>{log.Message}</td>
              </tr>
            }
          </tbody>
        </table>
      }
    }
  }
}
