// -*- html -*-
package main

import "fmt"

templ Base(toplevel int, title string) {
  <!DOCTYPE html>
  <html lang="en">
    <head>
      <title>{title}</title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0" />
      <!-- core bootstrap -->
      <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous" />
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>

      <!-- bootstrap icons -->
      <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" />

      <!-- htmx -->
      <script src="https://unpkg.com/htmx.org@1.9.10" integrity="sha384-D1Kt99CQMDuVetoL1lrYwg5t+9QdHe7NLX/SoJYkXDFfX37iInKRy5xLSi8nO7UC" crossorigin="anonymous"></script>


      <!-- this loading bar found from Reddit:
      https://old.reddit.com/r/htmx/comments/1blwnc4/tip_of_the_day_unobtrusive_global_loading/
      -->
      <style>
        .loading-bar {
            opacity: 0;
            width: 100%;
            height: 4px;
            background: linear-gradient(90deg, transparent,
                #000, transparent,
                #000, transparent
            );
        }

        .htmx-request.loading-bar {
            opacity: 1;
            animation: fadeIn 1s linear forwards, slide 0.8s ease-in-out infinite;
        }
        @keyframes slide {
            0%   { transform: translateX(-100%); }
            100% { transform: translateX( 100%); }
        }

        @keyframes fadeIn {
            0%   { opacity: 0; }
            50%  { opacity: 0; }
            100% { opacity: 1; }
        }

      </style>
    </head>
    <body hx-boost="true" hx-indicator=".loading-bar">
      <div class="container-fluid" id="container">
        <div class="row bg-success-subtle position-relative" id="top" style="padding-left:0;padding-right:0">
          @Col(2) {
            <h1><a href="/">Lixie</a></h1>
          }
          @Col(4) {
          <ul class="nav nav-pills" style="padding-top:8px">
            for _, info := range topLevelInfos {
              <li class="nav-item">
                <a
                  if info.ID == toplevel {
                  class="nav-link active"
                  } else {
                  class="nav-link"
                  }
                  href={templ.URL(info.Path + "/")}>{info.Title}</a>
              </li>
            }
          </ul>
          }
          @Col(6) {
            if toplevel != TopLevelMain {
              <h2 class="position-absolute bottom-0 end-0" style="padding-right:8px">{title}</h2>
            }
          }
        </div>
        <div class="loading-bar" />
        { children... }
      </div>
    </body>
  </html>
}

// Fresh row (with N columns of up to 12 width)
templ Row(id string) {
  <div class="row" id={id}>
    { children... }
  </div>
}

func colForWidth(width int) string {
  return fmt.Sprintf("col-%d", width)
}

// Variable-width column
templ Col(width int) {
  <div class={colForWidth(width)}>
    { children... }
  </div>
}
