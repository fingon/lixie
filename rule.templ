package main

import "fmt"
import "strconv"

const idKey = "rid"

const deleteField = "del"
const fieldField = "f"
const opField = "o"
const valueField = "v"

const actionAdd = "a"
const actionSave = "s"

func rowId(id int) string {
  return fmt.Sprintf("row-%d", id)
}

func fieldId(id int, suffix string) string {
  return fmt.Sprintf("row-%d-%s", id, suffix)
}

func ruleTitle(rule LogRule) string {
  if (rule.Id > 0) {
    return fmt.Sprintf("Log rule editor - editing #%d", rule.Id)
  }
  return "Log rule creator"
}

func ruleIdString(rule LogRule) string {
  return fmt.Sprintf("%d", rule.Id)
}

templ LogRuleEdit(rule LogRule) {
  @Base(ruleTitle(rule)) {
  <form action="/rule/edit">
    <input type="hidden" name={idKey} value={ruleIdString(rule)} />
    @Row("add-new") {
      @Col(2) {
        <input type="submit" name={actionAdd} value="Add field" />
      }
      @Col(2) {
        <input type="submit" name={actionSave}  value="Save" />
      }
    }
    for i, matcher := range rule.Matchers {
      @Row(rowId(i)) {
        @Col(1) {
          <input type="submit" name={fieldId(i, deleteField)} value="Delete" />
        }
        @Col(2) {
         <input type="text" name={fieldId(i, fieldField)} value={matcher.Field} />
        }
        @Col(1) {
         <input type="text" name={fieldId(i, opField)} value={matcher.Op} />
        }
        @Col(8) {
         <input type="text" name={fieldId(i, valueField)} value={matcher.Value} />
        }
      }
    }
  </form>
  }
}

templ LogRuleMatchersTable(rule LogRule) {
  <table>
    <tbody>
      for _, matcher := range rule.Matchers {
        <tr>
          <td>{matcher.Field}</td>
          <td>{matcher.Op}</td>
          <td>{matcher.Value}</td>
        </tr>
      }
    </tbody>
  </table>
}


func ruleLink(id int, op string) templ.SafeURL {
  return templ.URL(fmt.Sprintf("/rule/%d/%s", id, op))
}


templ LogRuleList(rules []*LogRule) {
  @Base("Log rule list") {
    @Row("rule-add") {
      @Col(2) {
        <a href="/rule/edit">Add rule</a>
      }
    }
    @Row("rules") {
      @Col(12) {
        <table>
          <tbody>
            for _, rule := range rules {
              <tr>
                <td>
                  #{strconv.Itoa(rule.Id)}
                </td>
                <td>
                  @LogRuleMatchersTable(*rule)
                </td>
                <td>
                  <a href={ruleLink(rule.Id, "delete")}>Delete</a>
                  <a href={ruleLink(rule.Id, "edit")}>Edit</a>
                </td>
              </tr>
            }
          </tbody>
        </table>
      }
    }
  }
}
